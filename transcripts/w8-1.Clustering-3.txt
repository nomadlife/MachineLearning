Most of the supervised learning algorithms we've seen, things like linear regression, logistic regression, and so on, all of those algorithms have an optimization objective or some cost function that the algorithm was trying to minimize. It turns out that k-means also has an optimization objective or a cost function that it's trying to minimize. And in this video I'd like to tell you what that optimization objective is. And the reason I want to do so is because this will be useful to us for two purposes. First, knowing what is the optimization objective of k-means will help us to debug the learning algorithm and just make sure that k-means is running correctly. And second, and perhaps more importantly, in a later video we'll talk about how we can use this to help k-means find better costs for this and avoid the local optimum. But we do that in a later video that follows this one. Just as a quick reminder while k-means is running we're going to be keeping track of two sets of variables. First is the ci's and that keeps track of the index or the number of the cluster, to which an example xi is currently assigned. And then the other set of variables we use is mu subscript k, which is the location of cluster centroid k. Again, for k-means we use capital K to denote the total number of clusters. And here lower case k is going to be an index into the cluster centroids and so, lower case k is going to be a number between one and capital K.
우리가 보았던 대부분의 감독 학습 알고리즘, 선형 회귀, 로지스틱 회귀 등과 같은 모든 알고리즘은 알고리즘이 최소화하려고하는 최적화 목표 또는 비용 함수를 가지고 있습니다. k- 평균에는 최적화 목표 또는 최소화하려는 비용 함수가 있음이 밝혀졌습니다. 이 동영상에서 최적화 목표가 무엇인지 알려 드리고자합니다. 그리고 제가 그렇게하고 싶은 이유는 이것이 두 가지 목적을 위해 우리에게 유용 할 것이기 때문입니다. 첫째, k-means의 최적화 목적이 무엇인지 아는 것은 학습 알고리즘을 디버그하고 k-means가 올바르게 실행되는지 확인하는 데 도움이됩니다. 두 번째, 그리고 아마도 더 중요한 것은 나중에 비디오에서 k- 수단이이를위한 더 나은 비용을 찾고 local optimum을 피할 수있는 방법에 대해 이야기 할 것입니다. 그러나 우리는이 비디오를 따르는 이후 비디오에서이를 수행합니다. k-means가 실행되는 동안 우리는 두 세트의 변수를 추적 할 것입니다. 첫 번째는 ci 's이며, 예 xi가 현재 할당 된 클러스터의 인덱스 또는 번호를 추적합니다. 그리고 우리가 사용하는 변수의 다른 집합은 mu 중심점 k의 위치 인 mu 첨자 k입니다. 다시, k- 평균에 대해 우리는 총 클러스터 수를 나타 내기 위해 대문자 K를 사용합니다. 그리고 여기에서 소문자 k는 클러스터 중심에 대한 지수가 될 것이므로 소문자 k는 1과 자본 K 사이의 숫자가 될 것입니다.

1:29
Now here's one more bit of notation, which is gonna use mu subscript ci to denote the cluster centroid of the cluster to which example xi has been assigned, right? And to explain that notation a little bit more, lets say that xi has been assigned to cluster number five. What that means is that ci, that is the index of xi, that that is equal to five. Right? Because having ci equals five, if that's what it means for the example xi to be assigned to cluster number five. And so mu subscript ci is going to be equal to mu subscript 5. Because ci is equal to five. And so this mu subscript ci is the cluster centroid of cluster number five, which is the cluster to which my example xi has been assigned. Out with this notation, we're now ready to write out what is the optimization objective of the k-means clustering algorithm and here it is. The cost function that k-means is minimizing is a function J of all of these parameters, c1 through cm and mu 1 through mu K. That k-means is varying as the algorithm runs. And the optimization objective is shown to the right, is the average of 1 over m of sum from i equals 1 through m of this term here.
이제 예를 들어 xi가 할당 된 클러스터의 클러스터 중심을 나타 내기 위해 mu 첨자 ci를 사용하는 더 많은 표기법이 있습니다. 맞습니까? 그리고 그 표기법을 조금 더 설명하면 xi가 5 번 클러스터에 할당되었다고 할 수 있습니다. 이것이 의미하는 것은 xi의 지수 인 ci가 5와 같다는 것입니다. 권리? ci가 5와 같기 때문에 이것이 xi 예제가 클러스터 번호 5에 지정된다는 것을 의미합니다. 그리고 mu 첨자 ci는 mu 첨자 5와 같을 것입니다. 왜냐하면 ci는 5와 같기 때문입니다. 그리고이 mu 첨자 ci는 클러스터 번호 5의 클러스터 중심입니다. 이것은 나의 예제 xi가 할당 된 클러스터입니다. 이 표기법으로 이제 k- 평균 클러스터링 알고리즘의 최적화 목표를 작성하고 준비 할 수 있습니다. k-means가 최소화하는 비용 함수는 c1 ~ cm 및 mu1 ~ muK의 모든 매개 변수의 함수 J입니다.이 k- 평균은 알고리즘이 실행됨에 따라 다양합니다. 그리고 최적화 목표는 오른쪽에 나와 있는데, 여기에서 i의 1에서 m까지의 합계의 1을 초과하는 평균이 여기에 있습니다.

2:50
That I've just drawn the red box around, right? The square distance between each example xi and the location of the cluster centroid to which xi has been assigned. So let's draw this and just let me explain this. Right, so here's the location of training example xi and here's the location of the cluster centroid to which example xi has been assigned. So to explain this in pictures, if here's x1, x2, and if a point here is my example xi, so if that is equal to my example xi, and if xi has been assigned to some cluster centroid, I'm gonna denote my cluster centroid with a cross, so if that's the location of mu 5, let's say. If x i has been assigned cluster centroid five as in my example up there, then this square distance, that's the square of the distance between the point xi and this cluster centroid to which xi has been assigned. And what k-means can be shown to be doing is that it is trying to define parameters ci and mu i. Trying to find c and mu to try to minimize this cost function J. This cost function is sometimes also called the distortion
방금 빨간 상자를 그렸습니다. 각 예제 xi와 xi가 할당 된 클러스터 중심의 위치 사이의 제곱 거리. 그럼 이것을 그려서 설명해 보도록하겠습니다. 그렇습니다. 여기 연습 예제 xi의 위치가 있으며 여기에 예제 xi가 할당 된 클러스터 중심의 위치가 있습니다. 여기 그림이 x1, x2이고 여기에 한 점이 예제 xi 인 경우, 예제 xi와 같고 xi가 일부 중심점에 할당되어 있다면, 십자가가있는 중 도심을 클러스터하십시오. 그래서 그것이 mu 5의 위치라면, 가정 해 봅시다. x i가 내 예제에서와 같이 클러스터 중력 5에 할당 되었다면 xi가 할당 된 xi 점과이 클러스터 중심 점 사이의 거리의 제곱입니다. 그리고 k-means가 수행 할 수있는 것은 매개 변수 ci와 mu를 정의하려고 시도한다는 것입니다. 이 비용 함수 J를 최소화하기 위해 c와 mu를 찾으려고 노력합니다.이 비용 함수는 때로 왜곡이라고도합니다 
4:06
cost function, or the distortion of the k-means algorithm. And just to provide a little bit more detail, here's the k-means algorithm. Here's exactly the algorithm as we have written it out on the earlier slide. And what this first step of this algorithm is, this was the cluster assignment step where we assigned each point to the closest centroid. And it's possible to show mathematically that what the cluster assignment step is doing is exactly Minimizing J, with respect to the variables c1, c2 and so on, up to cm, while holding the cluster centroids mu 1 up to mu K, fixed.
비용 함수, 또는 k- 평균 알고리즘의 왜곡. 그리고 조금 더 자세하게 설명하기 위해 여기 k-means 알고리즘이 있습니다. 이전 슬라이드에서 알고리즘을 작성한 것과 같습니다. 그리고이 알고리즘의 첫 번째 단계는 가장 가까운 중심에 각 점을 할당 한 클러스터 할당 단계였습니다. 그리고 클러스터 할당 단계가 수행하는 것이 수학 c1, c2 등의 변수를 중심으로 J를 최소화하는 것입니다. 클러스터 중심을 1로 설정하고 muK까지 고정합니다.

4:58
So what the cluster assignment step does is it doesn't change the cluster centroids, but what it's doing is this is exactly picking the values of c1, c2, up to cm. That minimizes the cost function, or the distortion function J. And it's possible to prove that mathematically, but I won't do so here. But it has a pretty intuitive meaning of just well, let's assign each point to a cluster centroid that is closest to it, because that's what minimizes the square of distance between the points in the cluster centroid. And then the second step of k-means, this second step over here. The second step was the move centroid step. And once again I won't prove it, but it can be shown mathematically that what the move centroid step does is it chooses the values of mu that minimizes J, so it minimizes the cost function J with respect to, wrt is my abbreviation for, with respect to, when it minimizes J with respect to the locations of the cluster centroids mu 1 through mu K. So if is really is doing is this taking the two sets of variables and partitioning them into two halves right here. First the c sets of variables and then you have the mu sets of variables. And what it does is it first minimizes J with respect to the variable c and then it minimizes J with respect to the variables mu and then it keeps on. And, so all that's all that k-means does. And now that we understand k-means as trying to minimize this cost function J, we can also use this to try to debug other any algorithm and just kind of make sure that our implementation of k-means is running correctly. So, we now understand the k-means algorithm as trying to optimize this cost function J, which is also called the distortion function.
따라서 클러스터 할당 단계에서 수행하는 작업은 클러스터 중심성을 변경하지 않지만이 작업은 정확히 c1, c2의 값을 cm 단위로 선택하는 것입니다. 이것은 비용 함수 또는 왜곡 함수 J를 최소화합니다. 수학적으로 증명할 수도 있지만 여기서는 그렇게하지 않을 것입니다. 그러나 이것은 꽤 직관적 인 의미를 가지고 있습니다. 각 점을 클러스터 중심점에 가장 가깝게 할당하십시오. 클러스터 중심점의 점 사이의 거리의 제곱을 최소화하기 때문입니다. 그리고 나서 k-means의 두 번째 단계가이 두 번째 단계입니다. 두 번째 단계는 이동 중심 단계였습니다. 그리고 다시 한번 저는 그것을 증명하지는 않을 것입니다. 그러나 중력 이동 단계가하는 것은 J를 최소화하는 mu의 값을 선택한다는 것입니다. 따라서 비용 함수 J를 최소화합니다. wrt는에 대한 약자입니다. 에 관해서, 클러스터 중심 μ 1 내지 mu K의 위치와 관련하여 J를 최소화 할 때, 실제로 두 개의 변수 세트를 취하여 여기에서 두 개의 반으로 분할하는 것이 이것이다. 먼저 변수의 c 세트를 만든 다음 mu 변수 세트를 갖습니다. 그리고 그것이하는 일은 먼저 변수 c에 대해 J를 최소화 한 다음 μ 변수에 대해 J를 최소화 한 다음 계속 유지하는 것입니다. 그리고 모든 것이 k-means가하는 모든 것입니다. 이제 우리는 k-means가이 비용 함수 J를 최소화하려고 노력함을 이해합니다. 다른 알고리즘을 디버깅하려고 시도 할 수 있습니다. k-means의 구현이 올바르게 실행되고 있는지 확인하십시오. 그래서 우리는 k-means 알고리즘을 왜곡 함수라고도하는이 비용 함수 J를 최적화하려고하는 것으로 이해합니다.

6:50
We can use that to debug k-means and help make sure that k-means is converging and is running properly. And in the next video we'll also see how we can use this to help k-means find better clusters and to help k-means to avoid
이를 사용하여 k-means를 디버그하고 k-means가 수렴하고 올바르게 실행되는지 확인할 수 있습니다. 그리고 다음 비디오에서는 k-means가 더 나은 클러스터를 찾고 k-means가 피하기 위해 도움이되는 방법을 볼 것입니다.
