0:00
이 비디오에서는 큰 여백 분류 뒤에있는 수학에 대해 조금 알려 드리고자합니다.
0:05
이 동영상은 선택 사항이므로 건너 뛰어도 좋습니다. 그것은 또한 당신에게 더 큰 직감을 줄 수있는 방법에 대한 지원 vex 기계의 최적화 문제, 어떻게 큰 마진 분류기로 이어집니다.
0:21
시작하기 위해 먼저 벡터 내부 제품의 모습에 대한 몇 가지 속성을 상기시켜 드리겠습니다.
0:28
두 개의 벡터 U와 V가 있다고 가정 해 보겠습니다. 그래서 두 가지 차원의 벡터.
0:35
그렇다면 U가 V를 어떻게 바꾸는 지 보자. 그리고 U transpose V는 벡터 U와 V 사이의 내부 곱으로도 불립니다.
0:48
2 차원 벡터를 사용하여이 그림에 플롯 할 수 있습니다. 그래서 그것이 벡터 U라고 가정 해 봅시다. 그리고 제가 의미하는 바는 가로 축에서 값이 U1이 무엇이든간에 세로 축에서 U2가 벡터 U의 두 번째 구성 요소 인 지의 높이를 취하는 경우입니다. 좋은 한 가지 양은 규범입니다.
1:16
U의 표준 또는 길이를 나타내는 왼쪽과 오른쪽의 두 개의 막대가 있습니다. 실제로 벡터 U의 유클리드 길이입니다. 그리고 이것은 피타고라스 정리는 U1 제곱에 U2 제곱 제곱근을 더한 것과 같습니다. 맞습니까? 그리고 이것은 벡터 U의 길이입니다. 그것은 실수입니다. 이 벡터의 길이는 얼마입니까? 방금 그린이 화살의 길이는 얼마입니까?
1:56
이제 벡터 V를 살펴보고 내부 제품을 계산하기를 원합니다. 그래서 V는 V1, V2의 값을 가진 다른 벡터가 될 것입니다.
2:08
그래서 벡터 V는 V처럼 그렇게 보일 것입니다.
2:16
이제 돌아가서 U와 V 사이의 내부 제품을 계산하는 방법을 살펴 보겠습니다. 어떻게 할 수 있습니다. 벡터 V를 벡터 U에 투영 해 봅시다. 그래서 직각 투영법 또는 90도 투영법을 사용하여 U에 투영합니다.
2:36
그리고 제가 할 일은 제가 여기 그린 빨간 선의 길이를 측정하는 것입니다. 그래서, 저는 그 붉은 선 P의 길이를 부를 것입니다. 그래서, P는 길이 또는 투영의 크기입니다
2:49
벡터 V의 벡터 U에 대입하면됩니다. 그래서, P는 길이입니다.
2:57
벡터 V의 벡터 U에 투영 된 값을 나타낼 수있다. 그리고 단위 곱 U가 벡터 V의 놈 또는 길이의 P 배와 같을 것이라는 것을 보여줄 수있다. 방법으로 내부 제품을 계산합니다. 그리고 실제로 P가 무엇인지 도형을 계산하고 U의 표준이 무엇인지 알아 내면됩니다. 이것은 당신에게 같은 방식으로 컴퓨팅 유닛 제품의 다른 방법과 같은 대답을 제공해야합니다.
3:34
권리. 당신이 U 전치 V를하면 U는이 U1 U2를 2 행렬로 1 배로 바꿉니다. 그래서 이것은 실제로 당신에게 U1, V1 + U2, V2를 주어야합니다.
3:51
그리고 선형 대수학의 정리는이 두 공식이 여러분에게 동일한 답을줍니다.
3:57
그런데 U transpose V는 V transpose U와 동일합니다. 그래서 같은 과정을 역으로하면, V를 U에 투영하는 대신에 U를 V에 투영 할 수 있습니다. 그런 다음, 똑같은 작업을하십시오. 프로세스가 있지만 U와 V 행이 바뀌 었습니다. 그리고 실제로 당신은 그 번호가 무엇이든 실제로 같은 번호를 얻어야합니다. 그리고이 방정식에서 일어나는 일을 명확히하기 위해 U의 표준은 실수이고 P는 또한 실수입니다. 그래서 U는 V를 P 배의 길이의 두 실수로 정규 배율로 곱합니다.
4:35
P의 규범을 보면 마지막 세부 사항 하나가 실제로 오른쪽에 서명되어 있습니다.
4:41
긍정적이거나 부정적 일 수 있습니다.
4:44
그래서 저는 U가 이것과 같이 보이는 벡터이고 V가 이와 같이 보이는 벡터 인 경우, 제가 의미하는 바를 말하게하겠습니다.
4:52
그래서 U와 V 사이의 각도가 90도 이상이면. 그렇다면 내가 V를 U에 투사하면, 제가 얻은 것은 길이가 P 인이 투영법입니다. 그리고이 경우, 저는 여전히 U 전치 V가 P 배의 U 표준과 같습니다. 이것을 제외하고는 예 P는 음수가됩니다.
5:19
U와 V 사이의 각도가 90도보다 작 으면 내부 제품에서 P는 빨간색 선의 양의 길이이고 반면에이 각도의 각도가 90도 이상이면 P는 여기에 해당합니다. 바로 그 작은 선분의 수퍼 라인 길이의 음수입니다. 두 벡터 사이의 내부 제품은 또한 이들 사이의 각도가 90도 이상이면 음수가 될 수 있습니다. 이것이 벡터 내부 제품의 작동 방식입니다. 우리는 벡터 내부 제품의 이러한 속성을 사용하여 지원 벡터 기계 최적화 목표를 이해하려고 시도합니다. 앞에서 다룬 지원 벡터 머신의 최적화 목적은 다음과 같습니다. 이 슬라이드의 목적을 위해 간단하게 하나의 단순화를 만들거나 객관적으로 분석하기 쉽도록하기 위해 내가 할 일은 하나의 indeceptrum을 무시하는 것입니다. 따라서 우리는 단지 theta 0을 무시하고 0으로 설정합니다.
6:16
음모를 쉽게 만들고, N의 피쳐 수를 2로 설정하려고합니다. 그래서, 우리는 단지 2 개의 피쳐만을 가지고 있습니다.
6:23
X1 및 X2.
6:26
이제 목적 함수를 살펴 보겠습니다. SVM의 최적화 목적. 우리에게는 두 가지 특징 만 있습니다. N이 2 일 때, 이것은 쎄타 1의 1/2과 제곱 2의 제곱을 써서 쓸 수 있습니다. 왜냐하면 두 개의 매개 변수, 쎄타 1과 쎄타 2만을 가지고 있기 때문입니다.
6:45
내가 할 일은 이것을 조금 재 작성하는 것입니다. 저는 이것을 세타 1 제곱 플러스 쎄타 제곱 제곱 제곱 제곱근 제곱근으로 써 보겠습니다. 그리고 내가 그 일을 할 수있는 이유는, 어떤 숫자라도 알고 있기 때문입니다. W, 맞습니다.
7시
W의 제곱근과 제곱 된 W는 W와 동일합니다. 그래서 제곱근과 제곱은 똑같은 것을 제공해야합니다.
7:08
당신이 알아 차릴 수있는 것은이 용어가 내부가 표준과 동일하다는 것입니다
7:14
또는 벡터 세타의 길이와 제가 의미하는 바는 우리가 세타 1, 쎄타 2를 아는 것처럼 이처럼 벡터 세타를 작성하면됩니다. 그렇다면 제가 방금 적색으로 강조한이 용어는 정확하게 벡터 쎄타의 길이 또는 표준입니다. 이전 행에있는 벡터의 규범에 대한 정의를 호출합니다.
7:36
그리고 실제로 이것은 세타 제로, 세타 1, 세타 2로 쓰든간에 실제로는 세타의 길이와 같습니다. 즉, 여기에서 가정 할 때 세타 제로가 0 일 경우입니다. 또는 단지 쎄타 1, 쎄타 2의 길이; 하지만이 줄에서 저는 세타 0을 무시할 것입니다. 그래서 세타를 이렇게 취급하도록하겠습니다. 세타 1, 쎄타 2만으로 정상 쎄타를 씁니다.하지만 수학은 어느쪽으로 든 작동합니다. 여기에 쎄타 제로를 포함하든 그렇지 않든간에. 따라서 나머지 파생물에 대해서는 중요하지 않습니다.
8:07
그리고 결국 이것은 내 최적화 목적이 쎄타 제곱의 표준의 1/2과 같음을 의미합니다.
8:16
모든 지원 벡터 머신이 최적화 목표에서 수행하고있는 것은 파라미터 벡터 세타의 제곱 길이의 제곱 된 놈을 최소화하는 것입니다.
8:28
이제 제가하고 싶은 것은이 용어들을 살펴보고, theta transpose X를하고 그들이하는 일을 더 잘 이해하는 것입니다. 그래서 주어진 매개 변수 벡터 theta와 주어진 그리고 예제 x, 이것은 무엇입니까? 그리고 이전 슬라이드에서, 우리는 U의 전치 V가 다른 벡터 U와 V로 어떻게 생겼는지를 알아 냈습니다. 그래서 우리는 theta와 X (i)가 U와 V의 역할을 수행하면서 이러한 정의를 취할 것입니다. V.
8:54
그리고 그 그림이 어떻게 생겼는지 보자. 그래서, 내가 음모를 꾸미자. 저는 단지 하나의 훈련 예를 봅니다. 드로잉이 저쪽에 있다는 긍정적 인 예가 있다고 가정 해 보겠습니다.이 예가 X (i)라는 예이며, 이것이 실제로 의미하는 바는 무엇입니까?
9:12
수평축 상에 어떤 값 X (i) 1 및 수직축 상에 그려지는 값
9:21
X (i) 2. 이것이 내가 훈련 예를 계획하는 방법입니다.
9시 25 분
그리고 우리가 이것을 벡터로 생각하지는 않았지만 이것이 실제로 무엇인지, 이것은 원점에서 0, 0까지의 벡터입니다.
9:34
이 훈련 예제의 위치.
9시 37 분
이제 매개 변수 벡터가 있다고 가정 해 봅시다. 매개 변수 벡터를 벡터로 그려 볼 것입니다. 그 말은 내가 여기 theta 1과 theta 2를 그려 보면
9:56
그래서 내부 제품 theta transpose X (i)는 무엇입니까? 이전 방법을 사용하는 동안 우리가 계산하는 방식은 예제를 사용하여 내 매개 변수 벡터 theta에 투영하는 것입니다.
10:09
그리고 나서 저는이 부분의 길이를 보게 될 것입니다. 나는 빨간색으로 채색하고 있습니다. 그리고 그 P 위 첨자를 i 번째 훈련 예제의 투사임을 나타 내기 위해 호출 할 것입니다.
10:24
매개 변수 벡터 세타에.
10:26
그래서 우리가 가지고있는 것은 theta transpose X (i)가 이전 슬라이드에서 우리가 가지고있는 것을 따르는 것과 같습니다. 이것은
10:36
P 배는 벡터 세타의 표준 길이입니다.
10:43
그리고 이것은 물론 theta 1 x1과 동일합니다.
10:47
플러스 쎄타 2 x2. 그래서 이들 각각은, 여러분도 알다시피, theta와 X (i) 사이의 내부 생성물을 계산하는 똑같이 유효한 방법입니다.
10:57
괜찮아. 그럼 우리가 어디에서 떠나나요? 이것이 의미하는 것은 이것이 theta transpose X (i)가 -1보다 크거나 같고 -1보다 작다는 것을 제한한다는 것입니다. 이것이 의미하는 바는 P (i) x가 1보다 크거나 같은 제약 조건의 사용을 대체 할 수 있다는 것입니다. 왜냐하면 theta transpose X (i)는 P (i)와 theta의 노름을 곱한 것과 같기 때문입니다.
11:21
그래서 우리의 최적화 목표에 쓰십시오. 이것은 우리가 가지고있는 것입니다, 대신에 theta transpose X (i) 대신에, 나는이 P (i) 배를 theta의 표준으로합니다.
11:31
그리고 우리는이 최적화 목적이 쎄타 제곱의 표준의 절반으로 쓰여질 수 있다는 것을 일찍부터 알아 냈습니다.
11:41
이제 우리가 가지고있는 트레이닝 예제를 고려해 봅시다. theta 0이 0 인 단순화를 계속해서 사용하십시오. 지원 벡터 머신이 어떤 결정 경계를 선택하는지 봅시다.
11:55
여기에 하나의 옵션이 있습니다. 지원 벡터 머신이이 결정 경계를 선택했다고합시다. 매우 적은 여백이 있기 때문에 이것은 좋은 선택이 아닙니다. 이 결정 경계는 교육 사례에 매우 가깝습니다.
12:09
왜 지원 벡터 머신이 이것을하지 않을지 알아 보겠습니다.
12:14
이 매개 변수를 선택하면 매개 변수 벡터 θ가 실제로 결정 경계에 대해 90도에 있음을 나타낼 수 있습니다. 그리고 그 녹색 결정 경계는 그 방향을 가리키는 매개 변수 벡터 theta에 해당합니다.
12:30
그런데 theta 0이 0이라는 단순화는 결정 경계가 원점 (0,0)을 지나야한다는 것을 의미합니다. 이제 최적화 목표에 대해 이것이 무엇을 의미하는지 살펴 보겠습니다.
12:45
이 예제를 여기서 보겠습니다.
12:47
첫 번째 예제라고 가정 해 봅시다.
12:50
X1.
12:51
이 예제를 내 매개 변수 인 theta에 투영 한 것을 봅니다.
12:56
그것이 투영입니다.
12:57
그래서 그 작은 빨간 선분.
13:00
그것은 P1과 같습니다. 그리고 그것은 꽤 작을 것입니다, 맞습니다.
13:05
마찬가지로,
13:09
예를 들어 여기서 X2가 발생하면 두 번째 예가됩니다.
13:13
다음으로,이 예를 쎄타에 투영 한 것을 봅니다.
13:18
알 잖아. 그럼, 마젠타 색으로 그려주세요.
13:21
이 작은 마젠타 선 세그먼트는 P2가 될 것입니다. 이것은 두 번째 예제를 내 방향으로 투영 한 것입니다.
13:30
내 매개 변수 벡터 세타의 이런 식으로 간다.
13:33
그래서,이 작은
13:35
투영 선분이 꽤 작아지고 있습니다.
13:36
P2는 실제로 음수 일 것이므로 P2는 반대 방향입니다.
13:43
이 벡터는 매개 변수 벡터 θ와 90도를 초과합니다. 0보다 작습니다.
13:50
그래서 우리가 발견 한 것은 이러한 용어 P (i)가 꽤 작은 숫자가 될 것이라는 것입니다. 따라서 우리가 최적화 목표를보고, 긍정적 인 예들에 대해, 우리는 세타 표준보다 두 배 이상 큰 P (i) 배를 필요로합니다.
14:08
하지만 P (i)가 여기에 있으면, P1이 꽤 작 으면, 그것은 우리가 세타의 규범이 꽤 커야한다는 것을 의미합니다, 맞습니까? 만약
14:19
세타의 P1은 작고 우리는 당신이 모든 세타의 시간이 어느 것보다 더 크다는 것을 알기를 원합니다. 우리가 말했듯이 P1이 작 으면이 두 숫자가 커야 이익을 얻는 유일한 방법입니다. 우리는 세타 규범이 커지 길 원합니다.
14:34
우리의 부정적인 예와 마찬가지로 P2가 필요합니다.
14:39
세타 표준은 마이너스 1보다 작거나 같아야한다. 그리고이 예제에서 P2는 이미 아주 작은 음수로 나타 났으므로 그 일이 일어날 수있는 유일한 방법은 세타 표준에 대한 것이지만 최적화 목표에서 우리가 시도하는 것은 우리가 시도하고있는 것입니다 세타의 규범이 작고 매개 변수의 세팅을 찾기 위해 알 수 있듯이 이것은 매개 변수 벡터와 세타에 대한 좋은 방향처럼 보이지 않습니다. 반대로 다른 결정 경계를 살펴보십시오.
15:17
여기,이 SVM이
15:20
그 결정 경계.
15:22
이제는 매우 다를 것입니다. 그것이 결정 경계라면, 여기에 쎄타의 대응 방향이 있습니다. 여러분이 알고있는 방향 경계를 가지고, 그 수직선은 선형 대수학을 사용하여 그린 결정 경계를 얻는 방법은 세타의 벡터가 90 도가되도록하는 것이고, 지금 보면 데이터를 벡터에 투영 할 때
15:48
x는 x1의 예제입니다. 그래서 제가 이것을 x 또는 theta에 투사 할 때, 이것은 제가 P1이라는 것을 알 수 있습니다.
16:00
그 길이는 P1입니다.
16:03
다른 예를 들면, 그 예가 있고 저는 같은 투영법을 사용합니다.이 길이는 P2보다 작으므로 0보다 작을 것입니다. 그리고 이제 P1과 P2가
16:23
투영법이 훨씬 더 커질 것이고 따라서 우리가 여전히 이러한 제약 조건을 적용 할 필요가 있다면 P1이 표준보다 훨씬 크기 때문에 세타 표준의 P1이 위상 번호 1이됩니다. 법선은 더 작을 수 있습니다.
16:41
이것이 의미하는 바는 왼쪽 대신에 오른쪽에 보이는 결정 경계를 선택함으로써 SVM이 매개 변수 theta의 표준을 훨씬 더 작게 만들 수 있다는 것입니다. 그래서 우리가 theta의 규범을 더 작게 만들어서 theta의 제곱 된 규범을 더 작게 만들 수 있다면, 왜 SVM은이 가설을 오른쪽에서 선택하게되는지에 대한 것입니다.
17:02
그리고 이것은 어떻게
17:05
SVM은 이러한 큰 마진 인증 효과를 발생시킵니다.
17:10
주로이 녹색 선을 본다면,이 녹색 가설을 보면 세가에 대한 나의 긍정적이고 부정적인 예가 더 커지 길 원한다. 녹색 선을 둘러싼다면 이것이 사실 일 수있는 유일한 길이다.
17:24
이 큰 마진이 있습니다.이 큰 차이가 있습니다.
17:33
긍정적이고 부정적인 사례는 실제로이 격차의 크기입니다. 이 여백의 크기는 정확히 P1, P2, P3 등의 값입니다. 그리고 마진을 크게함으로써, 이러한 tyros P1, P2, P3 등으로 인해 SVM은 목표에서 무엇을 하려는지 세타 규범에 대한 더 작은 값으로 끝날 수 있습니다. 그리고이 기계가 훈련 마진으로부터 결정 경계까지의 거리 인 P1의 표준을 최대화하려고하기 때문에 마진 분 류기가 커지기 때문입니다.
18:14
마지막으로, 우리는이 단순화를 사용하여 매개 변수 theta 0이 0과 같아야합니다. 간단히 언급했듯이 theta 0이 0이면 우리는 결정 경계를 즐겁게합니다. 결정 경계의 기원을 통과하는 것은 그와 같은 근원을 통과합니다. 쎄타 0을 0이 아닌 값으로 허용하면 그 방금 의미하는 것은 제가 방금 그린 것 같은 기원을 넘어선 결정 경계를 즐겁게한다는 것입니다. 그리고 나는 그것을 완전히 파생시키지 않을 것입니다. 이 같은 큰 증거금은 거의 똑같은 방식으로 작용합니다. 그리고 우리가 방금 전에 겪었던이 논증의 일반화가 있습니다. 그것은 쎄타 0이 0이 아니더라도 SVM이 여러분이이 최적화 목적을 가지고있을 때 무엇을하려고하는지 보여줍니다.
19:08
다시 C가 매우 큰 경우에 해당합니다.
19:14
그러나 시타가 0이 아니면 지원 벡터 머신이 여전히 긍정적 인 것과 부정적인 예 사이의 큰 여백 구분 기호를 찾으려고한다는 것을 보여줄 수 있습니다. 그래서이 지원 벡터 머신이 큰 마진 분류자인 방법을 설명합니다.
19:32
다음 비디오에서는 이러한 SVM 아이디어 중 일부를 취하여 복잡한 비선형 분류자를 작성하는 방법을 시작하는 방법에 대해 설명하기 시작합니다.
